package us.monoid.saitek;;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SRequestStatus extends Structure {
	public int dwHeaderError;
	public int dwHeaderInfo;
	public int dwRequestError;
	public int dwRequestInfo;
	public SRequestStatus() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("dwHeaderError", "dwHeaderInfo", "dwRequestError", "dwRequestInfo");
	}
	public SRequestStatus(int dwHeaderError, int dwHeaderInfo, int dwRequestError, int dwRequestInfo) {
		super();
		this.dwHeaderError = dwHeaderError;
		this.dwHeaderInfo = dwHeaderInfo;
		this.dwRequestError = dwRequestError;
		this.dwRequestInfo = dwRequestInfo;
	}
	public SRequestStatus(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected SRequestStatus newInstance() { return new SRequestStatus(); }
	public static SRequestStatus[] newArray(int arrayLength) {
		return null; // Structure.newArray(SRequestStatus.class, arrayLength);
	}
	public static class ByReference extends SRequestStatus implements Structure.ByReference {
		
	};
	public static class ByValue extends SRequestStatus implements Structure.ByValue {
		
	};
}
